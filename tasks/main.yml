---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for install...
  become: true
  ansible.builtin.stat:
    path: '{{ spire_install_dir }}'
  changed_when: false
  register: spire_binary
- name: Downloading and installing spire
  when: not spire_binary.stat.exists
  block:
    - name: Download archive...
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ spire_url }}'
        dest: '{{ spire_tmp_tgz }}'
        mode: '644'
        checksum: '{{ spire_checksum }}'
    - name: Unarchiving {{ spire_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ spire_tmp_tgz }}'
        dest: '{{ spire_parent_install_dir }}'
        creates: '{{ spire_install_dir }}'
  always:
    - name: Rm -f {{ spire_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ spire_tmp_tgz }}'
        state: absent
- name: Linking install dir
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ spire_install_dir }}'
    dest: '{{ spire_link_dir }}'
    state: link
- name: Linking binaries...
  become: true
  become_user: root
  with_items:
    - spire-server
    - spire-agent
  ansible.builtin.file:
    src: '{{ spire_link_dir }}/bin/{{ item }}'
    dest: '{{ spire_parent_install_dir }}/bin/{{ item }}'
    state: link
